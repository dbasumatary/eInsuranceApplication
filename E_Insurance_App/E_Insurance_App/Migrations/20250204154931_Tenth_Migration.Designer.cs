// <auto-generated />
using System;
using E_Insurance_App.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace E_Insurance_App.Migrations
{
    [DbContext(typeof(InsuranceDbContext))]
    [Migration("20250204154931_Tenth_Migration")]
    partial class Tenth_Migration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("E_Insurance_App.Models.Entities.Admin", b =>
                {
                    b.Property<int>("AdminID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdminID"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("AdminID");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Admins", (string)null);
                });

            modelBuilder.Entity("E_Insurance_App.Models.Entities.Agent", b =>
                {
                    b.Property<int>("AgentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AgentID"));

                    b.Property<decimal>("CommissionRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("AgentID");

                    b.ToTable("Agents");
                });

            modelBuilder.Entity("E_Insurance_App.Models.Entities.Commission", b =>
                {
                    b.Property<int>("CommissionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CommissionID"));

                    b.Property<int>("AgentID")
                        .HasColumnType("int");

                    b.Property<string>("AgentName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("CommissionAmount")
                        .HasColumnType("DECIMAL(10, 2)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("PaymentProcessedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PolicyID")
                        .HasColumnType("int");

                    b.Property<int>("PremiumID")
                        .HasColumnType("int");

                    b.HasKey("CommissionID");

                    b.HasIndex("AgentID");

                    b.HasIndex("PolicyID");

                    b.HasIndex("PremiumID");

                    b.ToTable("Commissions");
                });

            modelBuilder.Entity("E_Insurance_App.Models.Entities.Customer", b =>
                {
                    b.Property<int>("CustomerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerID"));

                    b.Property<int>("AgentID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CustomerID");

                    b.HasIndex("AgentID");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("E_Insurance_App.Models.Entities.Employee", b =>
                {
                    b.Property<int>("EmployeeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeID"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("EmployeeID");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Employees", (string)null);
                });

            modelBuilder.Entity("E_Insurance_App.Models.Entities.InsurancePlan", b =>
                {
                    b.Property<int>("PlanID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlanID"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("PlanDetails")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlanName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("PlanID");

                    b.ToTable("InsurancePlans");
                });

            modelBuilder.Entity("E_Insurance_App.Models.Entities.Payment", b =>
                {
                    b.Property<int>("PaymentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentID"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("DECIMAL(10, 2)");

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("PolicyID")
                        .HasColumnType("int");

                    b.Property<int>("PremiumID")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("Pending");

                    b.HasKey("PaymentID");

                    b.HasIndex("CustomerID");

                    b.HasIndex("PolicyID");

                    b.HasIndex("PremiumID");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("E_Insurance_App.Models.Entities.Policy", b =>
                {
                    b.Property<int>("PolicyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PolicyID"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateIssued")
                        .HasColumnType("datetime2");

                    b.Property<int>("MaturityPeriod")
                        .HasColumnType("int");

                    b.Property<string>("PolicyDetails")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PolicyLapseDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SchemeID")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("Pending");

                    b.HasKey("PolicyID");

                    b.HasIndex("CustomerID");

                    b.HasIndex("SchemeID");

                    b.ToTable("Policies");
                });

            modelBuilder.Entity("E_Insurance_App.Models.Entities.PolicyCancellation", b =>
                {
                    b.Property<int>("CancellationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CancellationID"));

                    b.Property<DateTime>("CancellationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("CancelledBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PolicyID")
                        .HasColumnType("int");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CancellationID");

                    b.HasIndex("PolicyID");

                    b.ToTable("PolicyCancellations");
                });

            modelBuilder.Entity("E_Insurance_App.Models.Entities.Premium", b =>
                {
                    b.Property<int>("PremiumID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PremiumID"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<decimal>("BaseRate")
                        .HasColumnType("DECIMAL(10, 2)");

                    b.Property<decimal>("CalculatedPremium")
                        .HasColumnType("DECIMAL(10, 2)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<int>("PolicyID")
                        .HasColumnType("int");

                    b.Property<int>("SchemeID")
                        .HasColumnType("int");

                    b.HasKey("PremiumID");

                    b.HasIndex("CustomerID");

                    b.HasIndex("PolicyID");

                    b.HasIndex("SchemeID");

                    b.ToTable("Premiums");
                });

            modelBuilder.Entity("E_Insurance_App.Models.Entities.Scheme", b =>
                {
                    b.Property<int>("SchemeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SchemeID"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("PlanID")
                        .HasColumnType("int");

                    b.Property<string>("SchemeDetails")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("SchemeFactor")
                        .HasColumnType("DECIMAL(10, 2)");

                    b.Property<string>("SchemeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("SchemeID");

                    b.HasIndex("PlanID");

                    b.ToTable("Schemes");
                });

            modelBuilder.Entity("E_Insurance_App.Models.Entities.Commission", b =>
                {
                    b.HasOne("E_Insurance_App.Models.Entities.Agent", "Agent")
                        .WithMany()
                        .HasForeignKey("AgentID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("E_Insurance_App.Models.Entities.Policy", "Policy")
                        .WithMany()
                        .HasForeignKey("PolicyID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("E_Insurance_App.Models.Entities.Premium", "Premium")
                        .WithMany()
                        .HasForeignKey("PremiumID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Agent");

                    b.Navigation("Policy");

                    b.Navigation("Premium");
                });

            modelBuilder.Entity("E_Insurance_App.Models.Entities.Customer", b =>
                {
                    b.HasOne("E_Insurance_App.Models.Entities.Agent", "Agent")
                        .WithMany("Customers")
                        .HasForeignKey("AgentID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Agent");
                });

            modelBuilder.Entity("E_Insurance_App.Models.Entities.Payment", b =>
                {
                    b.HasOne("E_Insurance_App.Models.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("E_Insurance_App.Models.Entities.Policy", "Policy")
                        .WithMany()
                        .HasForeignKey("PolicyID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("E_Insurance_App.Models.Entities.Premium", "Premium")
                        .WithMany()
                        .HasForeignKey("PremiumID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Policy");

                    b.Navigation("Premium");
                });

            modelBuilder.Entity("E_Insurance_App.Models.Entities.Policy", b =>
                {
                    b.HasOne("E_Insurance_App.Models.Entities.Customer", "Customer")
                        .WithMany("Policies")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("E_Insurance_App.Models.Entities.Scheme", "Scheme")
                        .WithMany("Policies")
                        .HasForeignKey("SchemeID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Scheme");
                });

            modelBuilder.Entity("E_Insurance_App.Models.Entities.PolicyCancellation", b =>
                {
                    b.HasOne("E_Insurance_App.Models.Entities.Policy", "Policy")
                        .WithMany("Cancellations")
                        .HasForeignKey("PolicyID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Policy");
                });

            modelBuilder.Entity("E_Insurance_App.Models.Entities.Premium", b =>
                {
                    b.HasOne("E_Insurance_App.Models.Entities.Customer", "Customer")
                        .WithMany("Premiums")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("E_Insurance_App.Models.Entities.Policy", "Policy")
                        .WithMany("Premiums")
                        .HasForeignKey("PolicyID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("E_Insurance_App.Models.Entities.Scheme", "Scheme")
                        .WithMany("Premiums")
                        .HasForeignKey("SchemeID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Policy");

                    b.Navigation("Scheme");
                });

            modelBuilder.Entity("E_Insurance_App.Models.Entities.Scheme", b =>
                {
                    b.HasOne("E_Insurance_App.Models.Entities.InsurancePlan", "Plan")
                        .WithMany("Schemes")
                        .HasForeignKey("PlanID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Plan");
                });

            modelBuilder.Entity("E_Insurance_App.Models.Entities.Agent", b =>
                {
                    b.Navigation("Customers");
                });

            modelBuilder.Entity("E_Insurance_App.Models.Entities.Customer", b =>
                {
                    b.Navigation("Policies");

                    b.Navigation("Premiums");
                });

            modelBuilder.Entity("E_Insurance_App.Models.Entities.InsurancePlan", b =>
                {
                    b.Navigation("Schemes");
                });

            modelBuilder.Entity("E_Insurance_App.Models.Entities.Policy", b =>
                {
                    b.Navigation("Cancellations");

                    b.Navigation("Premiums");
                });

            modelBuilder.Entity("E_Insurance_App.Models.Entities.Scheme", b =>
                {
                    b.Navigation("Policies");

                    b.Navigation("Premiums");
                });
#pragma warning restore 612, 618
        }
    }
}
